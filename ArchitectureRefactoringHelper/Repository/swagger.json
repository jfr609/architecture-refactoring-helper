{
  "openapi": "3.0.1",
  "info": {
    "title": "Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/inputs/domain-artifacts": {
      "get": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "ListDomainArtifacts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainArtifactInput"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "AddDomainArtifact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainArtifactInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainArtifactInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DomainArtifactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainArtifactInput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inputs/domain-artifacts/{name}": {
      "delete": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "DeleteDomainArtifact",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inputs/runtime-artifacts": {
      "get": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "ListRuntimeArtifact",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuntimeArtifactInput"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "AddRuntimeArtifact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuntimeArtifactInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RuntimeArtifactInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RuntimeArtifactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeArtifactInput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inputs/runtime-artifacts/{name}": {
      "delete": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "DeleteRuntimeArtifact",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inputs/model-artifacts": {
      "get": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "ListModelArtifacts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelArtifactInput"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "AddModelArtifact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelArtifactInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelArtifactInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelArtifactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelArtifactInput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inputs/model-artifacts/{name}": {
      "delete": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "DeleteModelArtifact",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/inputs/executables": {
      "get": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "ListExecutables",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutableInput"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "AddExecutable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutableInput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inputs/executables/{name}/{language}": {
      "delete": {
        "tags": [
          "ApproachInput"
        ],
        "operationId": "DeleteExecutable",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/outputs": {
      "get": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "ListApproachOutputs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachOutput"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/outputs/{id}": {
      "get": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "GetApproachOutput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproachOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/outputs/architectures": {
      "get": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "ListArchitectures",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Architecture"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "AddArchitecture",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Architecture"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Architecture"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Architecture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Architecture"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/outputs/architectures/{name}": {
      "delete": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "DeleteArchitecture",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/outputs/service-types": {
      "get": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "ListServiceTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "AddServiceType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/outputs/service-types/{name}": {
      "delete": {
        "tags": [
          "ApproachOutput"
        ],
        "operationId": "DeleteServiceType",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/processes": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListApproachProcess",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachProcess"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/{id}": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "GetApproachProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproachProcess"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/qualities": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListQualities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Quality"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "AddQuality",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quality"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Quality"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Quality"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quality"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/qualities/{name}": {
      "delete": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "DeleteQuality",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/processes/quality-sublevels": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListQualitySublevels",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QualitySublevel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "AddQualitySublevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualitySublevel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QualitySublevel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QualitySublevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualitySublevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/quality-sublevels/{name}": {
      "delete": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "DeleteQualitySublevel",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/processes/directions": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListDirections",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Direction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "AddDirection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Direction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Direction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Direction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Direction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/directions/{name}": {
      "delete": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "DeleteDirection",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/processes/automation-levels": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListAutomationLevels",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutomationLevel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "AddAutomationLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationLevel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationLevel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomationLevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/automation-levels/{name}": {
      "delete": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "DeleteAutomationLevel",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/processes/analysis-types": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListAnalysisTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnalysisType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "AddAnalysisType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisType"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/analysis-types/{name}": {
      "delete": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "DeleteAnalysisType",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/processes/techniques": {
      "get": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "ListTechniques",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Quality"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "AddTechnique",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Technique"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Technique"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Technique"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Technique"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processes/techniques/{name}": {
      "delete": {
        "tags": [
          "ApproachProcess"
        ],
        "operationId": "DeleteTechnique",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/usabilities": {
      "get": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "ListApproachUsabilities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachUsability"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usabilities/{id}": {
      "get": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "GetApproachUsability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproachUsability"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usabilities/result-qualities": {
      "get": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "ListResultsQualities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultsQuality"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "AddResultsQuality",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultsQuality"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultsQuality"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResultsQuality"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsQuality"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usabilities/result-qualities/{name}": {
      "delete": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "DeleteResultsQuality",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/usabilities/tool-supports": {
      "get": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "ListToolSupports",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ToolSupport"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "AddToolSupport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolSupport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolSupport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ToolSupport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolSupport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usabilities/tool-supports/{name}": {
      "delete": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "DeleteToolSupport",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/usabilities/accuracy-precisions": {
      "get": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "ListAccuracyPrecisions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccuracyPrecision"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "AddAccuracyPrecision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccuracyPrecision"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccuracyPrecision"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccuracyPrecision"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccuracyPrecision"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usabilities/accuracy-precisions/{name}": {
      "delete": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "DeleteAccuracyPrecision",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/usabilities/validation-methods": {
      "get": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "ListValidationMethods",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationMethod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "AddValidationMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationMethod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationMethod"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationMethod"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usabilities/validation-methods/{name}": {
      "delete": {
        "tags": [
          "ApproachUsability"
        ],
        "operationId": "DeleteValidationMethod",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches": {
      "get": {
        "tags": [
          "RefactoringApproach"
        ],
        "summary": "Receives a complete list of all RefactoringApproach items",
        "operationId": "ListRefactoringApproaches",
        "parameters": [
          {
            "name": "withDetails",
            "in": "query",
            "description": "Decides whether the approaches are returned with all details or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefactoringApproach"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "summary": "Creates a new RefactoringApproach.\r\nInputs, process attributes, outputs or usability attributes that don't exist will be created in the process.",
        "operationId": "AddRefactoringApproach",
        "requestBody": {
          "description": "The RefactoringApproach we want to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefactoringApproach"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefactoringApproach"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefactoringApproach"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created RefactoringApproach",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefactoringApproach"
                }
              }
            }
          },
          "400": {
            "description": "If the RefactoringApproach is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "If a RefactoringApproach with the same title already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approaches/{id}": {
      "get": {
        "tags": [
          "RefactoringApproach"
        ],
        "summary": "Receives a RefactoringApproach",
        "operationId": "GetRefactoringApproach",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefactoringApproach"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "summary": "Deletes a RefactoringApproach",
        "operationId": "DeleteRefactoringApproach",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/recommendations": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "summary": "Returns a list of recommendation with their suitability evaluation based on either the request body or a selected\r\nrecommendation preset.\r\nIf a preset is given it will always be prioritised over the recommendation request body.",
        "operationId": "RecommendRefactoringApproaches",
        "parameters": [
          {
            "name": "preset",
            "in": "query",
            "description": "The recommendation preset the recommendation algorithm is running against",
            "schema": {
              "$ref": "#/components/schemas/RecommendationPreset"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of recommendations returned. If the number is negative all elements are returned",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The recommendation information the recommendation algorithm is running against",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachRecommendationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachRecommendationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachRecommendationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachRecommendation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/domain-artifacts": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddDomainArtifactAsInput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainArtifactInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainArtifactInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DomainArtifactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/domain-artifacts/{inputName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveDomainArtifactFromInputs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inputName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/runtime-artifacts": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddRuntimeArtifactAsInput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuntimeArtifactInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RuntimeArtifactInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RuntimeArtifactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/runtime-artifacts/{inputName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveRuntimeArtifactFromInputs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inputName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/model-artifacts": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddModelArtifactAsInput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelArtifactInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelArtifactInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelArtifactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/model-artifacts/{inputName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveModelArtifactFromInputs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inputName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/executables": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddExecutableAsInput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutableInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/inputs/executables/{inputName}/{language}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveExecutableFromInputs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inputName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/qualities": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddQualityToProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quality"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Quality"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Quality"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/qualities/{qualityName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveQualityFromProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "qualityName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/quality-sublevels": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddQualitySublevelToProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualitySublevel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QualitySublevel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QualitySublevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/quality-sublevels/{qualityName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveQualitySublevelFromProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "qualitySublevelName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qualityName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/directions": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddDirectionToProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Direction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Direction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Direction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/directions/{directionName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveDirectionFromProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "directionName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/automation-levels": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddAutomationLevelToProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationLevel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationLevel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutomationLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/automation-levels/{automationLevelName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveAutomationLevelFromProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "automationLevelName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/analysis-types": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddAnalysisTypeToProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/analysis-types/{analysisTypeName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveAnalysisTypeFromProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "analysisTypeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/techniques": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddTechniqueToProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Technique"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Technique"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Technique"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/processes/techniques/{techniqueName}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveTechniqueFromProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "techniqueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/outputs": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "AddOutput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachOutput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachOutput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachOutput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/outputs/{outputId}": {
      "delete": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "RemoveOutput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "outputId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/usabilities/result-qualities": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "UpdateResultsQuality",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultsQuality"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultsQuality"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResultsQuality"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/usabilities/tool-supports": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "UpdateToolSupport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolSupport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolSupport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ToolSupport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/usabilities/accuracy-precisions": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "UpdateAccuracyPrecision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccuracyPrecision"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccuracyPrecision"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccuracyPrecision"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/approaches/{id}/usabilities/validation-methods": {
      "post": {
        "tags": [
          "RefactoringApproach"
        ],
        "operationId": "UpdateValidationMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationMethod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationMethod"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/projects/scenarios": {
      "get": {
        "tags": [
          "Scenario"
        ],
        "operationId": "ListScenario",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scenario"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scenario"
        ],
        "operationId": "AddScenario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Scenario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Scenario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Scenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/projects/scenarios/{id}/qualities": {
      "get": {
        "tags": [
          "Scenario"
        ],
        "operationId": "GetQualities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scenario"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/scenarios/{id}/quality-sublevels": {
      "get": {
        "tags": [
          "Scenario"
        ],
        "operationId": "GetQualitySublevels",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scenario"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/scenarios/{id}": {
      "get": {
        "tags": [
          "Scenario"
        ],
        "operationId": "GetScenario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scenario"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scenario"
        ],
        "operationId": "UpdateScenario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Scenario"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Scenario"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Scenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Scenario"
        ],
        "operationId": "DeleteScenario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccuracyPrecision": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccuracyPrecisionApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/AccuracyPrecision"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "AccuracyPrecisionAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/AccuracyPrecision"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "AnalysisType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnalysisTypeApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/AnalysisType"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "AnalysisTypeAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/AnalysisType"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "ApproachOutput": {
        "required": [
          "architecture",
          "serviceType"
        ],
        "type": "object",
        "properties": {
          "approachOutputId": {
            "type": "integer",
            "format": "int32"
          },
          "architecture": {
            "$ref": "#/components/schemas/Architecture"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          }
        },
        "additionalProperties": false
      },
      "ApproachProcess": {
        "type": "object",
        "properties": {
          "approachProcessId": {
            "type": "integer",
            "format": "int32"
          },
          "qualities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quality"
            },
            "nullable": true
          },
          "qualitySublevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualitySublevel"
            },
            "nullable": true
          },
          "directions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Direction"
            },
            "nullable": true
          },
          "automationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutomationLevel"
            },
            "nullable": true
          },
          "analysisTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalysisType"
            },
            "nullable": true
          },
          "techniques": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Technique"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproachRecommendation": {
        "required": [
          "approachSource",
          "identifier",
          "matchesCount",
          "qualityScore",
          "refactoringApproachId",
          "suitabilityScore",
          "systemPropertiesScore",
          "totalIncludeCount",
          "totalScore",
          "weightedScore"
        ],
        "type": "object",
        "properties": {
          "refactoringApproachId": {
            "type": "integer",
            "format": "int32"
          },
          "identifier": {
            "type": "string"
          },
          "approachSource": {
            "$ref": "#/components/schemas/ApproachSource"
          },
          "domainArtifactInputEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainArtifactInputApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "runtimeArtifactInputEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuntimeArtifactInputApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "modelArtifactInputEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelArtifactInputApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "executableInputEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutableInputApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "qualityEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "qualitySublevelEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualitySublevelApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "directionEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectionApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "automationLevelEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutomationLevelApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "analysisTypeEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalysisTypeApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "techniqueEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechniqueApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "architectureEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchitectureApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "serviceTypeEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceTypeApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "validationMethodEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationMethodApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "toolSupportEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToolSupportApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "resultsQualityEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultsQualityApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "accuracyPrecisionEvaluations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccuracyPrecisionApproachAttributeEvaluation"
            },
            "nullable": true
          },
          "suitabilityScore": {
            "type": "integer",
            "format": "int32"
          },
          "matchesCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalIncludeCount": {
            "type": "integer",
            "format": "int32"
          },
          "qualityScore": {
            "$ref": "#/components/schemas/QualityScore"
          },
          "systemPropertiesScore": {
            "$ref": "#/components/schemas/SystemPropertiesScore"
          },
          "totalScore": {
            "type": "integer",
            "format": "int32"
          },
          "weightedScore": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApproachRecommendationRequest": {
        "required": [
          "accuracyPrecisionInformation",
          "analysisTypeInformation",
          "architectureInformation",
          "automationLevelInformation",
          "directionInformation",
          "domainArtifactInformation",
          "executableInformation",
          "modelArtifactInformation",
          "qualityInformation",
          "qualitySublevelInformation",
          "resultsQualityInformation",
          "runtimeArtifactInformation",
          "serviceTypeInformation",
          "techniqueInformation",
          "toolSupportInformation",
          "validationMethodInformation"
        ],
        "type": "object",
        "properties": {
          "domainArtifactInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainArtifactInputAttributeRecommendationInformation"
            }
          },
          "runtimeArtifactInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuntimeArtifactInputAttributeRecommendationInformation"
            }
          },
          "modelArtifactInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelArtifactInputAttributeRecommendationInformation"
            }
          },
          "executableInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutableInputAttributeRecommendationInformation"
            }
          },
          "qualityInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityAttributeRecommendationInformation"
            }
          },
          "qualitySublevelInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualitySublevelAttributeRecommendationInformation"
            }
          },
          "directionInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectionAttributeRecommendationInformation"
            }
          },
          "automationLevelInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutomationLevelAttributeRecommendationInformation"
            }
          },
          "analysisTypeInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalysisTypeAttributeRecommendationInformation"
            }
          },
          "techniqueInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechniqueAttributeRecommendationInformation"
            }
          },
          "architectureInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchitectureAttributeRecommendationInformation"
            }
          },
          "serviceTypeInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceTypeAttributeRecommendationInformation"
            }
          },
          "resultsQualityInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultsQualityAttributeRecommendationInformation"
            }
          },
          "toolSupportInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToolSupportAttributeRecommendationInformation"
            }
          },
          "accuracyPrecisionInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccuracyPrecisionAttributeRecommendationInformation"
            }
          },
          "validationMethodInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationMethodAttributeRecommendationInformation"
            }
          }
        },
        "additionalProperties": false
      },
      "ApproachSource": {
        "required": [
          "authors",
          "title",
          "year"
        ],
        "type": "object",
        "properties": {
          "approachSourceId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "authors": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApproachUsability": {
        "required": [
          "accuracyPrecision",
          "resultsQuality",
          "toolSupport",
          "validationMethod"
        ],
        "type": "object",
        "properties": {
          "approachUsabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "resultsQuality": {
            "$ref": "#/components/schemas/ResultsQuality"
          },
          "toolSupport": {
            "$ref": "#/components/schemas/ToolSupport"
          },
          "accuracyPrecision": {
            "$ref": "#/components/schemas/AccuracyPrecision"
          },
          "validationMethod": {
            "$ref": "#/components/schemas/ValidationMethod"
          }
        },
        "additionalProperties": false
      },
      "Architecture": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArchitectureApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/Architecture"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ArchitectureAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/Architecture"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "AttributeEvaluation": {
        "enum": [
          "Match",
          "Neutral",
          "Mismatch",
          "Error"
        ],
        "type": "string"
      },
      "AutomationLevel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutomationLevelApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/AutomationLevel"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "AutomationLevelAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/AutomationLevel"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "CalculationMetric": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Direction": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectionApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/Direction"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "DirectionAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/Direction"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "DomainArtifactInput": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DomainArtifactInputApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/DomainArtifactInput"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "DomainArtifactInputAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/DomainArtifactInput"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "ExecutableInput": {
        "required": [
          "language",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExecutableInputApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/ExecutableInput"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ExecutableInputAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ExecutableInput"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "ModelArtifactInput": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelArtifactInputApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/ModelArtifactInput"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ModelArtifactInputAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ModelArtifactInput"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Quality": {
        "required": [
          "category",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/QualityCategory"
          },
          "qualitySublevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualitySublevel"
            },
            "nullable": true
          },
          "qualityTradeOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quality"
            },
            "nullable": true
          },
          "calculationMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculationMetric"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QualityApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/Quality"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "QualityAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/Quality"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "QualityCategory": {
        "enum": [
          "Attribute",
          "SystemProperty"
        ],
        "type": "string"
      },
      "QualityScore": {
        "type": "object",
        "properties": {
          "selectedAttributes": {
            "type": "integer",
            "format": "int32"
          },
          "totalAttributes": {
            "type": "integer",
            "format": "int32"
          },
          "tendency": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QualitySublevel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "qualityName": {
            "type": "string",
            "nullable": true
          },
          "qualityTradeOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quality"
            },
            "nullable": true
          },
          "calculationMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculationMetric"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QualitySublevelApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/QualitySublevel"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "QualitySublevelAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/QualitySublevel"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "RatingLevel": {
        "enum": [
          "A",
          "B",
          "C"
        ],
        "type": "string"
      },
      "RecommendationPreset": {
        "enum": [
          "NewApplication",
          "ReBuild",
          "ReFactor"
        ],
        "type": "string"
      },
      "RecommendationSuitability": {
        "enum": [
          "Include",
          "Neutral",
          "Exclude"
        ],
        "type": "string"
      },
      "RefactoringApproach": {
        "required": [
          "identifier"
        ],
        "type": "object",
        "properties": {
          "refactoringApproachId": {
            "type": "integer",
            "format": "int32"
          },
          "identifier": {
            "type": "string"
          },
          "approachSource": {
            "$ref": "#/components/schemas/ApproachSource"
          },
          "domainArtifactInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainArtifactInput"
            },
            "nullable": true
          },
          "runtimeArtifactInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuntimeArtifactInput"
            },
            "nullable": true
          },
          "modelArtifactInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelArtifactInput"
            },
            "nullable": true
          },
          "executableInputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutableInput"
            },
            "nullable": true
          },
          "approachProcess": {
            "$ref": "#/components/schemas/ApproachProcess"
          },
          "approachOutputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApproachOutput"
            },
            "nullable": true
          },
          "approachUsability": {
            "$ref": "#/components/schemas/ApproachUsability"
          }
        },
        "additionalProperties": false
      },
      "ResultsQuality": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResultsQualityApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/ResultsQuality"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ResultsQualityAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ResultsQuality"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "RuntimeArtifactInput": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeArtifactInputApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/RuntimeArtifactInput"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "RuntimeArtifactInputAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/RuntimeArtifactInput"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "Scenario": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "scenarioId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "difficulty": {
            "$ref": "#/components/schemas/RatingLevel"
          },
          "importance": {
            "$ref": "#/components/schemas/RatingLevel"
          },
          "qualities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quality"
            },
            "nullable": true
          },
          "qualitySublevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualitySublevel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceTypeApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ServiceTypeAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "SystemPropertiesScore": {
        "type": "object",
        "properties": {
          "selectedAttributes": {
            "type": "integer",
            "format": "int32"
          },
          "totalAttributes": {
            "type": "integer",
            "format": "int32"
          },
          "tendency": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Technique": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TechniqueApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/Technique"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "TechniqueAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/Technique"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "ToolSupport": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ToolSupportApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/ToolSupport"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ToolSupportAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ToolSupport"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      },
      "ValidationMethod": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationMethodApproachAttributeEvaluation": {
        "required": [
          "approachAttribute",
          "attributeEvaluation"
        ],
        "type": "object",
        "properties": {
          "approachAttribute": {
            "$ref": "#/components/schemas/ValidationMethod"
          },
          "attributeEvaluation": {
            "$ref": "#/components/schemas/AttributeEvaluation"
          }
        },
        "additionalProperties": false
      },
      "ValidationMethodAttributeRecommendationInformation": {
        "required": [
          "attribute",
          "recommendationSuitability"
        ],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/ValidationMethod"
          },
          "recommendationSuitability": {
            "$ref": "#/components/schemas/RecommendationSuitability"
          }
        },
        "additionalProperties": false
      }
    }
  }
}